#!/usr/bin/python
#
#   Aug/2008: Javier Fuchs                                    |\_/|   
#             Phone (+54 2944) 525173                        /     \  
#             http://southfox.servehttp.com                 /_.~ ~,_\ 
#                                                              \@/    
import cgi;
import os;
import sys;
import time;
import cgitb; cgitb.enable();

import libconfig;

def main():
    libconfig.starthtmlhead();
    libconfig.pagecss();
    print '  <META name="DESCRIPTION" content="Javier Fuchs: unix, linux">';
    print '';
    print '  <TITLE>Javier Fuchs: unix/linux</TITLE>';
    print '';
    print '<STYLE type="text/css">';
    print ' span.c2 {font-size: 80%}';
    print ' div.c1 {text-align: center}';
    print '</STYLE>';
    print '</HEAD>';
    print '';
    print '<BODY>';
    print '  <HR>';
    print '';
    print '  <DIV class="c1">';
    print '    <H1>Javier Fuchs: Unix / Linux</H1>';
    print '  </DIV>';
    print '';
    print '  <H2>Tips</H2>';
    print '';
    print '  <UL>';
    print '    <LI><A href="cgipy/unix.py#monitor-with-tail">Monitor with <B>tail</B></A></LI>';
    print '  </UL>';
    print '  <HR>';
    print '  <A name="tip" id="tip"></A>';
    print '';
    print '  <H2><A name="monitor-with-tail" id="monitor-with-tail">Monitor with <B>tail</B></A></H2>';
    print '';
    print '  <P>Using <B>tail</B> is one of the best forms of monitoring various system files</P>';
    print '';
    print '  <H3>Example One</H3>';
    print '';
    print '  <P>Shells: All</P>';
    print '';
    print '  <P>Syntax:</P>';
    print '  <PRE>';
    print '   tail -<I>number</I> file';
    print '</PRE>';
    print '';
    print '  <P>Always use <B>tail</B> to view the last <B>x</B> number of lines in a large file. It comes in handy when you only have 24 lines to work with on an VT100 type terminal or a nonscrolling X';
    print '  terminal or window session.</P>';
    print '  <PRE>';
    print '   # tail -5 /var/adm/sulog';
    print '';
    print '   SU 10/07 14:03 + ttyq7 cassi-root-crv';
    print '   SU 10/07 14:20 + ttyq8 cassi-root-crv';
    print '   SU 10/10 10:26 - ttyq2 mike-root-mxk';
    print '   SU 10/10 10:27 + ttyq2 mike-root-mxk';
    print '   SU 10/11 15:28 + ttyq1 root';
    print '   #';
    print '</PRE>';
    print '';
    print '  <H3>Example Two: The Last Lines</H3>';
    print '';
    print '  <P>Shells: All</P>';
    print '';
    print '  <P>Syntax:</P>';
    print '  <PRE>';
    print '   tail [<B>-f</B>] file';
    print '</PRE>';
    print '';
    print '  <P><I>Monitoring</I> can mean to consistently observe. The <B>tail</B> command offers a great feature to constantly observe open files that are written to on a regular basis. The output appears to';
    print '  be similar to using the <B>tail</B> command with a value, except that the shell prompt does not return to the window. The command continues to output any data that is written to the file that';
    print '  <B>tail</B> is observing. Tail remains running until a <TT>Ctrl+C</TT> is hit. Some excelent files to monitor on the fly are:</P>';
    print '';
    print '  <P>Flavors: All Unix</P>';
    print '  <PRE>';
    print '   # tail -f /var/adm/messages';
    print '   # tail -f /usr/local/httpd/logs/access_logs';
    print '   # tail -f /var/adm/sulog';
    print '   # tail -f /var/adm/SYSLOG';
    print '</PRE>';
    print '';
    print '  <P>Flavor: Linux</P>';
    print '  <PRE>';
    print '   # tail -f /var/log/messages';
    print '   # tail -f /var/log/httpd/access_log';
    print '</PRE>';
    print '';
    print '  <H3>Example Three: tail with Users</H3>';
    print '';
    print '  <P>Shells: ksh</P>';
    print '';
    print '  <P>Have you asked a user to enter a command and the user believes they are entering it correctly when in fact they are entering it incorrectly? We have all asked users to change directories or run';
    print '  programs that are similar to the program <B>/usr/tmp/program/runme</B> at one time or another. As administrators, what do you see happening? The user could do any one of the following:</P>';
    print '';
    print '  <UL>';
    print '    <LI>Turn Caps Lock on.</LI>';
    print '';
    print '    <LI>Type a backslash (<TT>\</TT>) instead of a slash (<TT>/</TT>), because they operated in the DOS world too long.</LI>';
    print '';
    print '    <LI>Type <B>user</B> instead of <B>usr</B>, because they don"t understand UNIX terms of pronunciations.</LI>';
    print '';
    print '    <LI>Use <B>temp</B> instead of <B>tmp</B>, because they don"t understand the differences in the directory structure.</LI>';
    print '  </UL>If you put the user in the korn shell, every command they enter is logged into a file called <B>.sh_history</B> in the user"s home directory. It is with this file that you can monitor the user';
    print '  as you talk then through varios steps and commands.';
    print '  <PRE>';
    print '   # tail -f /usr/home/ben/.sh_history';
    print '';
    print '   cd \USER\TEMP';
    print '   cd \usr\temp';
    print '   cd \usr\tmp';
    print '   cd /usr/tmp';
    print '   ls -al';
    print '   cat runme';
    print '   runme';
    print '   ./runme';
    print '</PRE>';
    print '';
    print '  <P>This is another tool, in an multiadministrative environment, for system administrators to show other administrators what steps are being taken at a remote terminal.</P>';
    print '';
    print '  <H3>Reason</H3>Any data that that is written out to a file can be used by the <B>tail</B> command. This command is a key tool in keeping an eye on your system and files.';
    print '';
    print '  <H3>Real World Experience</H3>It is easy to track the motions of an individual that might be attempting to compromise a system or a Web server using <B>tail</B>. On Web servers, <B>tail</B> can';
    print '  monitor HTTP logs on-the-fly to track those that are cruising through your site. When an intruder is attempting to comprimise a Web site, you can better estimate what they are up to by watching';
    print '  their move as it happens.';
    print '';
    print '  <H3>tail man page</H3>';
    print '  <PRE>';
    print '&lt;pre&gt;';
    print 'TAIL(1)                               FSF                              TAIL(1)';
    print '';
    print '';
    print '';
    print 'NAME';
    print '       tail - output the last part of files';
    print '';
    print 'SYNOPSIS';
    print '       tail [OPTION]... [FILE]...';
    print '';
    print 'DESCRIPTION';
    print '       Print  the  last  10  lines of each FILE to standard output.  With more';
    print '       than one FILE, precede each with a header giving the file  name.   With';
    print '       no FILE, or when FILE is -, read standard input.';
    print '';
    print '       Mandatory  arguments  to  long  options are mandatory for short options';
    print '       too.';
    print '';
    print '       --retry';
    print '              keep trying to open a file even if it is inaccessible when  tail';
    print '              starts  or  if it becomes inaccessible later -- useful only with';
    print '              -f';
    print '';
    print '       -c, --bytes=N';
    print '              output the last N bytes';
    print '';
    print '       -f, --follow[={name|descriptor}]';
    print '              output appended data as the file grows; -f, --follow, and --fol-';
    print '              low=descriptor are equivalent';
    print '';
    print '       -F     same as --follow=name --retry';
    print '';
    print '       -n, --lines=N';
    print '              output the last N lines, instead of the last 10';
    print '';
    print '       --max-unchanged-stats=N';
    print '              with  --follow=name,  reopen  a  FILE which has not changed size';
    print '              after N (default 5) iterations to see if it has been unlinked or';
    print '              renamed (this is the usual case of rotated log files)';
    print '';
    print '       --pid=PID';
    print '              with -f, terminate after process ID, PID dies';
    print '';
    print '       -q, --quiet, --silent';
    print '              never output headers giving file names';
    print '';
    print '       -s, --sleep-interval=S';
    print '              with -f, sleep for approximately S seconds (default 1.0) between';
    print '              iterations.';
    print '';
    print '       -v, --verbose';
    print '              always output headers giving file names';
    print '';
    print '       --help display this help and exit';
    print '';
    print '       --version';
    print '              output version information and exit';
    print '';
    print '       If the first character of N (the number of bytes or lines)  is  a  `+",';
    print '       print  beginning  with the Nth item from the start of each file, other-';
    print '       wise, print the last N items in the file.  N may have a multiplier suf-';
    print '       fix: b for 512, k for 1024, m for 1048576 (1 Meg).';
    print '';
    print '       With  --follow  (-f),  tail  defaults to following the file descriptor,';
    print '       which means that even if a tail"ed file is renamed, tail will  continue';
    print '       to  track  its  end.   This  default behavior is not desirable when you';
    print '       really want to track the actual name of the file, not the file descrip-';
    print '       tor (e.g., log rotation).  Use --follow=name in that case.  That causes';
    print '       tail to track the named file by reopening it periodically to see if  it';
    print '       has been removed and recreated by some other program.';
    print '';
    print 'AUTHOR';
    print '       Written  by Paul Rubin, David MacKenzie, Ian Lance Taylor, and Jim Mey-';
    print '       ering.';
    print '';
    print 'REPORTING BUGS';
    print '       Report bugs to &lt;bug-coreutils@gnu.org&gt;.';
    print '';
    print 'COPYRIGHT';
    print '       Copyright (C) 2002 Free Software Foundation, Inc.';
    print '       This is free software; see the source for copying conditions.  There is';
    print '       NO  warranty;  not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR';
    print '       PURPOSE.';
    print '';
    print 'SEE ALSO';
    print '       The full documentation for tail is maintained as a Texinfo manual.   If';
    print '       the  info  and  tail  programs are properly installed at your site, the';
    print '       command';
    print '';
    print '              info tail';
    print '';
    print '       should give you access to the complete manual.';
    print '';
    print '';
    print '';
    print 'tail (coreutils) 4.5.3           February 2003                         TAIL(1)';
    print '&lt;/pre&gt;';
    print '</PRE>';
    print '';
    libconfig.bottomline();
    print '</BODY>';
    print '</HTML>';

main();
